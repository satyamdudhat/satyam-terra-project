name: Satyam_project

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - master

env:
  TF_VAR_profile: "satyam"
  TF_VAR_ecr_name: "satyam_project"
  TF_VAR_table_name: "employee_infos"
  TF_VAR_api_name: "serverless_demos"
  TF_VAR_accountId: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  terraform-and-build:  # Combined job for Terraform and build
    runs-on: ubuntu-latest  # Use ARM64 runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configuration
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile satyam
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile satyam
          aws configure set region ${{ secrets.AWS_DEFAULT_REGION }} --profile satyam

      - name: Terraform init
        run: terraform init

      # - name: Terraform destroy (if applicable)
      #   run: terraform destroy -auto-approve  # Optional: Only run if necessary

      # Check if the ECR repository exists
      - name: Check ECR Repository
        id: check-ecr
        run: |
          if aws ecr describe-repositories --repository-names "satyam_project" &> /dev/null; then
            echo "ECR repository exists"
            echo "::set-output name=exists::true"
          else
            echo "ECR repository does not exist, create repository"
            echo "::set-output name=exists::false"
          fi


      - name: Terraform preplan
        run: terraform plan

      # - name: Terraform apply plan
      #   run: terraform apply -auto-approve

      